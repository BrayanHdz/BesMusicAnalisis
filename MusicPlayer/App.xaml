<Application
    x:Class="MusicPlayer.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="using:MusicPlayer.Helpers"
    xmlns:local="using:MusicPlayer"
    xmlns:services="using:MusicPlayer.Services">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="base.xaml"/>
                <ResourceDictionary Source="themeresources.xaml"/>
                <ResourceDictionary Source="Controls/UWPToolkit/ProfileCard/ProfileCard.xaml"/>
                <ResourceDictionary Source="Controls/UWPToolkit/AadLogin/AadLogin.xaml"/>
                <ResourceDictionary Source="statics.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <Color x:Key="ForgroundColor1">#FFFFFF</Color>
                    <Color x:Key="ForgroundColor2">#EEEEEE</Color>
                    <Color x:Key="ForgroundColor3">#999999</Color>
                    <Color x:Key="ForgroundColor4">#555555</Color>
                    <Color x:Key="ForgroundColor5">#333333</Color>
                    <Color x:Key="ForgroundColor6">#222222</Color>
                    <Color x:Key="ForgroundColor7">#1D1D1D</Color>
                    <Color x:Key="ForgroundColor8">#000000</Color>

                    <Color x:Key="BackgroundColor8">#FFFFFF</Color>
                    <Color x:Key="BackgroundColor7">#EEEEEE</Color>
                    <Color x:Key="BackgroundColor6">#999999</Color>
                    <Color x:Key="BackgroundColor5">#555555</Color>
                    <Color x:Key="BackgroundColor4">#333333</Color>
                    <Color x:Key="BackgroundColor3">#222222</Color>
                    <Color x:Key="BackgroundColor2">#1D1D1D</Color>
                    <Color x:Key="BackgroundColor1">#000000</Color>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <Color x:Key="ForgroundColor1">#FFFFFF</Color>
                    <Color x:Key="ForgroundColor2">#EEEEEE</Color>
                    <Color x:Key="ForgroundColor3">#999999</Color>
                    <Color x:Key="ForgroundColor4">#555555</Color>
                    <Color x:Key="ForgroundColor5">#333333</Color>
                    <Color x:Key="ForgroundColor6">#222222</Color>
                    <Color x:Key="ForgroundColor7">#1D1D1D</Color>
                    <Color x:Key="ForgroundColor8">#000000</Color>

                    <Color x:Key="BackgroundColor8">#FFFFFF</Color>
                    <Color x:Key="BackgroundColor7">#EEEEEE</Color>
                    <Color x:Key="BackgroundColor6">#999999</Color>
                    <Color x:Key="BackgroundColor5">#555555</Color>
                    <Color x:Key="BackgroundColor4">#333333</Color>
                    <Color x:Key="BackgroundColor3">#222222</Color>
                    <Color x:Key="BackgroundColor2">#1D1D1D</Color>
                    <Color x:Key="BackgroundColor1">#000000</Color>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <Color x:Key="BackgroundColor8">#000000</Color>
                    <Color x:Key="BackgroundColor7">#1D1D1D</Color>
                    <Color x:Key="BackgroundColor6">#222222</Color>
                    <Color x:Key="BackgroundColor5">#333333</Color>
                    <Color x:Key="BackgroundColor4">#555555</Color>
                    <Color x:Key="BackgroundColor3">#999999</Color>
                    <Color x:Key="BackgroundColor2">#EEEEEE</Color>
                    <Color x:Key="BackgroundColor1">#FFFFFF</Color>

                    <Color x:Key="ForgroundColor8">#FFFFFF</Color>
                    <Color x:Key="ForgroundColor7">#FFFFFF</Color>
                    <Color x:Key="ForgroundColor6">#EEEEEE</Color>
                    <Color x:Key="ForgroundColor5">#999999</Color>
                    <Color x:Key="ForgroundColor4">#333333</Color>
                    <Color x:Key="ForgroundColor3">#555555</Color>
                    <Color x:Key="ForgroundColor2">#222222</Color>
                    <Color x:Key="ForgroundColor1">#000000</Color>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>


            <StaticResource x:Key="ColorDisabled" ResourceKey="ForgroundColor5" />
            <StaticResource x:Key="ColorPressed" ResourceKey="ForgroundColor2" />
            <StaticResource x:Key="ColorNormal" ResourceKey="ForgroundColor3" />
            <StaticResource x:Key="ColorHover" ResourceKey="ForgroundColor1" />

            <!--<Color x:Key="ColorDisabled">#342E33</Color>
            <Color x:Key="ColorPressed">#B8B6B7</Color>
            <Color x:Key="ColorNormal">#A09D9F</Color>
            <Color x:Key="ColorHover">#FFFFFF</Color>-->

            <SolidColorBrush x:Key="BrushDisabled" Color="{ThemeResource ColorDisabled}" />
            <SolidColorBrush x:Key="BrushPressed" Color="{ThemeResource ColorPressed}" />
            <SolidColorBrush x:Key="BrushNormal" Color="{ThemeResource ColorNormal}" />
            <SolidColorBrush x:Key="BrushHover" Color="{ThemeResource ColorHover}" />

            <SolidColorBrush x:Key="AccentBrushDisabled" Color="{ThemeResource SystemAccentColorDark3}" />
            <SolidColorBrush x:Key="AccentBrushPressed" Color="{ThemeResource SystemAccentColorDark1}" />
            <SolidColorBrush x:Key="AccentBrushNormal" Color="{ThemeResource SystemAccentColor}" />
            <SolidColorBrush x:Key="AccentBrushHover" Color="{ThemeResource SystemAccentColorLight3}" />

            <SolidColorBrush x:Key="AccentBrush" Color="{ThemeResource SystemAccentColor}" />
            <SolidColorBrush x:Key="AccentBrushDark1" Color="{ThemeResource SystemAccentColorDark1}" />
            <SolidColorBrush x:Key="AccentBrushDark2" Color="{ThemeResource SystemAccentColorDark2}" />
            <SolidColorBrush x:Key="AccentBrushDark3" Color="{ThemeResource SystemAccentColorDark3}" />
            <SolidColorBrush x:Key="AccentBrushLight1" Color="{ThemeResource SystemAccentColorLight1}" />
            <SolidColorBrush x:Key="AccentBrushLight2" Color="{ThemeResource SystemAccentColorLight2}" />
            <SolidColorBrush x:Key="AccentBrushLight3" Color="{ThemeResource SystemAccentColorLight3}" />


            <ThemeResource x:Key="AccentColor"       ResourceKey="SystemAccentColor" />
            <ThemeResource x:Key="AccentColorDark1"  ResourceKey="SystemAccentColorDark1" />
            <ThemeResource x:Key="AccentColorDark2"  ResourceKey="SystemAccentColorDark2" />
            <ThemeResource x:Key="AccentColorDark3"  ResourceKey="SystemAccentColorDark3" />
            <ThemeResource x:Key="AccentColorLight1" ResourceKey="SystemAccentColorLight1" />
            <ThemeResource x:Key="AccentColorLight2" ResourceKey="SystemAccentColorLight2" />
            <ThemeResource x:Key="AccentColorLight3" ResourceKey="SystemAccentColorLight3" />


   

            <SolidColorBrush x:Key="ForgroundBrush1" Color="{StaticResource ForgroundColor1}" />
            <SolidColorBrush x:Key="ForgroundBrush2" Color="{StaticResource ForgroundColor2}" />
            <SolidColorBrush x:Key="ForgroundBrush3" Color="{StaticResource ForgroundColor3}" />
            <SolidColorBrush x:Key="ForgroundBrush4" Color="{StaticResource ForgroundColor4}" />
            <SolidColorBrush x:Key="ForgroundBrush5" Color="{StaticResource ForgroundColor5}" />
            <SolidColorBrush x:Key="ForgroundBrush6" Color="{StaticResource ForgroundColor6}" />
            <SolidColorBrush x:Key="ForgroundBrush7" Color="{StaticResource ForgroundColor7}" />
            <SolidColorBrush x:Key="ForgroundBrush8" Color="{StaticResource ForgroundColor8}" />
            <SolidColorBrush x:Key="BackgroundBrush8" Color="{StaticResource BackgroundColor8}" />
            <SolidColorBrush x:Key="BackgroundBrush7" Color="{StaticResource BackgroundColor7}" />
            <SolidColorBrush x:Key="BackgroundBrush6" Color="{StaticResource BackgroundColor6}" />
            <SolidColorBrush x:Key="BackgroundBrush5" Color="{StaticResource BackgroundColor5}" />
            <SolidColorBrush x:Key="BackgroundBrush4" Color="{StaticResource BackgroundColor4}" />
            <SolidColorBrush x:Key="BackgroundBrush3" Color="{StaticResource BackgroundColor3}" />
            <SolidColorBrush x:Key="BackgroundBrush2" Color="{StaticResource BackgroundColor2}" />
            <SolidColorBrush x:Key="BackgroundBrush1" Color="{StaticResource BackgroundColor1}" />

            <SolidColorBrush x:Key="SystemControlTransparentBackgroundBrush" Color="#c0888888"></SolidColorBrush>
            <SolidColorBrush x:Key="SystemControlTransparentBorderBrush" Color="#c0989898" />

            <helpers:ConstantsHelper x:Key="const" />
            <Thickness x:Key="ButtonPadding">8,4,8,5</Thickness>
            <x:Boolean x:Key="UseSystemFocusVisuals">True</x:Boolean>
            <CornerRadius x:Key="IninitCornerRadius">
                9999999
            </CornerRadius>


            <Style x:Key="SmalButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{ThemeResource BrushNormal}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource IninitCornerRadius}">
                                <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                CornerRadius="{StaticResource IninitCornerRadius}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorHover}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorPressed}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundDisabled}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="RoundButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{ThemeResource ForgroundBrush1}" />
                <Setter Property="BorderBrush" Value="{ThemeResource ColorNormal}" />
                <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
                <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource IninitCornerRadius}">
                                <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                CornerRadius="{StaticResource IninitCornerRadius}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ColorHover}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ColorPressed}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ButtonBackgroundDisabled}" />-->
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ColorDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RoundToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{ThemeResource ColorNormal}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="{ThemeResource ToggleButtonBorderThemeThickness}" />
                <Setter Property="Padding" Value="{StaticResource ButtonPadding}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource IninitCornerRadius}">
                                <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Foreground="{TemplateBinding Foreground}" 

                                    AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                CornerRadius="{StaticResource IninitCornerRadius}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />-->

                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorHover}" />

                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />-->
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundPressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushPressed}" />
                                                <Setter Target="" Value="{ThemeResource ToggleButtonForegroundPressed}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorPressed}" />

                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundDisabled}" />-->
                                                <!--<Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushDisabled}" />-->
                                                <!--<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundDisabled}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ColorDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundChecked}" />-->
                                                <!--<Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushChecked}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AccentBrushNormal}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AccentBrushHover}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />-->
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedPressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushCheckedPressed}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AccentBrushPressed}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundCheckedDisabled}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushCheckedDisabled}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AccentBrushDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundIndeterminate}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushIndeterminate}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />-->
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePointerOver}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePointerOver}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />-->
                                                <!--<Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundIndeterminatePressed}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushIndeterminatePressed}" />-->
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}" />
                                            </VisualState.Setters>

                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonBackgroundIndeterminateDisabled}" />
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonBorderBrushIndeterminateDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="LineStackingStrategy" Value="MaxHeight" />
                <Setter Property="TextLineBounds" Value="Full" />
            </Style>
            <Style
            x:Key="BodyTextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="14" />
            </Style>
            <Style
            x:Key="CaptionTextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="AppBarButtonStyle" TargetType="AppBarButton">
                <Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource AppBarButtonBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Width" Value="68" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="AllowFocusOnInteraction" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="AppBarButton">
                            <Grid
                            x:Name="Root"
                            MinWidth="{TemplateBinding MinWidth}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            Margin="1,0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid
                                x:Name="ContentRoot"
                                MinHeight="{ThemeResource AppBarThemeMinHeight}"
                                Margin="-1,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Viewbox
                                    x:Name="ContentViewbox"
                                    Height="16"
                                    Margin="{StaticResource AppBarButtonContentViewboxCollapsedMargin}"
                                    HorizontalAlignment="Stretch"
                                    AutomationProperties.AccessibilityView="Raw">
                                        <ContentPresenter
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                    </Viewbox>
                                    <TextBlock
                                    x:Name="TextLabel"
                                    Grid.Row="1"
                                    Margin="2,0,2,6"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="12"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Center"
                                    TextWrapping="Wrap" />
                                    <TextBlock
                                    x:Name="OverflowTextLabel"
                                    Margin="12,0,12,0"
                                    Padding="{StaticResource AppBarButtonOverflowTextLabelPadding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="15"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Left"
                                    TextTrimming="Clip"
                                    TextWrapping="NoWrap"
                                    Visibility="Collapsed" />
                                    <TextBlock
                                    x:Name="KeyboardAcceleratorTextLabel"
                                    Grid.Column="1"
                                    MinWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Margin="24,0,12,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Foreground="{ThemeResource AppBarButtonKeyboardAcceleratorTextForeground}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                    Visibility="Collapsed" />
                                    <Border
                                    x:Name="Border"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Margin="1,0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullSize" />
                                        <VisualState x:Name="Compact">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LabelOnRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonTextLabelOnRightMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LabelCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Overflow">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowWithToggleButtons">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowWithMenuIcons">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                                <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                                <Setter Target="ContentViewbox.Width" Value="16" />
                                                <Setter Target="ContentViewbox.Height" Value="16" />
                                                <Setter Target="ContentViewbox.Margin" Value="12,0,12,0" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                                <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                                <Setter Target="ContentViewbox.Width" Value="16" />
                                                <Setter Target="ContentViewbox.Height" Value="16" />
                                                <Setter Target="ContentViewbox.Margin" Value="38,0,12,0" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="Pressed" />-->
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowNormal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowPressed">
                                            <VisualState.Setters>
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="InputModeStates">
                                        <VisualState x:Name="InputModeDefault" />
                                        <VisualState x:Name="TouchInputMode">
                                            <VisualState.Setters>
                                                <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarButtonOverflowTextTouchMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="GameControllerInputMode">
                                            <VisualState.Setters>
                                                <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarButtonOverflowTextTouchMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                        <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                        <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                            <VisualState.Setters>
                                                <Setter Target="KeyboardAcceleratorTextLabel.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AppBarToggleButtonStyle" TargetType="AppBarToggleButton">
                <Setter Property="Foreground" Value="{ThemeResource AppBarToggleButtonForeground}" />
                <Setter Property="BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrush}" />
                <Setter Property="BorderThickness" Value="{ThemeResource AppBarToggleButtonBorderThemeThickness}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Width" Value="68" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="AllowFocusOnInteraction" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="AppBarToggleButton">
                            <Grid
                            x:Name="Root"
                            MinWidth="{TemplateBinding MinWidth}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            Margin="1,0"
                            CornerRadius="{TemplateBinding CornerRadius}">
                                <Rectangle
                                x:Name="CheckedHighlightBackground"
                                Fill="{ThemeResource AppBarToggleButtonBackgroundChecked}"
                                Opacity="0" />
                                <Rectangle x:Name="AccentOverlayBackground" Fill="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlay}" />
                                <Grid
                                x:Name="ContentRoot"
                                MinHeight="{ThemeResource AppBarThemeMinHeight}"
                                Margin="-1,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                    x:Name="OverflowCheckGlyph"
                                    Width="14"
                                    Height="14"
                                    Margin="{StaticResource AppBarToggleButtonOverflowCheckMargin}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="16"
                                    Foreground="{ThemeResource AppBarToggleButtonCheckGlyphForeground}"
                                    Opacity="0"
                                    Text="&#xE73E;"
                                    Visibility="Collapsed" />
                                    <Viewbox
                                    x:Name="ContentViewbox"
                                    Height="16"
                                    Margin="{StaticResource AppBarButtonContentViewboxCollapsedMargin}"
                                    HorizontalAlignment="Stretch"
                                    AutomationProperties.AccessibilityView="Raw">
                                        <ContentPresenter
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                    </Viewbox>
                                    <TextBlock
                                    x:Name="TextLabel"
                                    Grid.Row="1"
                                    Margin="2,0,2,6"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="12"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Center"
                                    TextWrapping="Wrap" />
                                    <TextBlock
                                    x:Name="OverflowTextLabel"
                                    Margin="38,0,12,0"
                                    Padding="{StaticResource AppBarToggleButtonOverflowTextLabelPadding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="15"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Left"
                                    TextTrimming="Clip"
                                    TextWrapping="NoWrap"
                                    Visibility="Collapsed" />
                                    <TextBlock
                                    x:Name="KeyboardAcceleratorTextLabel"
                                    Grid.Column="1"
                                    MinWidth="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Margin="24,0,12,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Foreground="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForeground}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                    Visibility="Collapsed" />
                                    <Border
                                    x:Name="Border"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Margin="1,0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="ApplicationViewStates">
                                        <VisualState x:Name="FullSize" />
                                        <VisualState x:Name="Compact">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LabelOnRight">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarToggleButtonTextLabelOnRightMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LabelCollapsed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Overflow">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="CheckedHighlightBackground.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowCheckGlyph.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowWithMenuIcons">
                                            <VisualState.Setters>
                                                <Setter Target="ContentRoot.MinHeight" Value="0" />
                                                <Setter Target="ContentViewbox.Visibility" Value="Visible" />
                                                <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                                <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                                <Setter Target="ContentViewbox.MaxWidth" Value="16" />
                                                <Setter Target="ContentViewbox.MaxHeight" Value="16" />
                                                <Setter Target="ContentViewbox.Margin" Value="38,0,12,0" />
                                                <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                                <Setter Target="CheckedHighlightBackground.Visibility" Value="Collapsed" />
                                                <Setter Target="OverflowCheckGlyph.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                                <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPointerOver}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="Pressed" />-->
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPressed}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPressed}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.Background" Value="{ThemeResource AppBarToggleButtonBackgroundDisabled}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushDisabled}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundDisabled}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundDisabled}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundDisabled}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundDisabled}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushChecked}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundChecked}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundChecked}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="ContentRoot.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPointerOver}" />
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPointerOver}" />
                                                <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundCheckedPointerOver}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="Pressed" />-->
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPressed}" />
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPressed}" />
                                                <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundCheckedPressed}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedDisabled}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedDisabled}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedDisabled}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedDisabled}" />
                                                <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedDisabled}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedDisabled}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundCheckedDisabled}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="OverflowNormal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowPointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPointerOver}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowPressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="Pressed" />-->
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPressed}" />
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPressed}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPressed}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowChecked">
                                            <VisualState.Setters>
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushChecked}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundChecked}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowCheckedPointerOver">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />-->
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPointerOver}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPointerOver}" />
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPointerOver}" />
                                                <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPointerOver}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPointerOver}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OverflowCheckedPressed">
                                            <VisualState.Setters>
                                                <!--<Setter Target="Root.(RevealBrush.State)" Value="Pressed" />-->
                                                <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPressed}" />
                                                <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}" />
                                                <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}" />
                                                <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPressed}" />
                                                <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPressed}" />
                                                <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPressed}" />
                                                <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPressed}" />
                                                <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonKeyboardAcceleratorTextForegroundPressed}" />
                                                <Setter Target="CheckedHighlightBackground.Opacity" Value="1" />
                                                <Setter Target="OverflowCheckGlyph.Opacity" Value="1" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="InputModeStates">
                                        <VisualState x:Name="InputModeDefault" />
                                        <VisualState x:Name="TouchInputMode">
                                            <VisualState.Setters>
                                                <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarToggleButtonOverflowTextTouchMargin}" />
                                                <Setter Target="OverflowCheckGlyph.Margin" Value="{StaticResource AppBarToggleButtonOverflowCheckTouchMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="GameControllerInputMode">
                                            <VisualState.Setters>
                                                <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarToggleButtonOverflowTextTouchMargin}" />
                                                <Setter Target="OverflowCheckGlyph.Margin" Value="{StaticResource AppBarToggleButtonOverflowCheckTouchMargin}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                        <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                        <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                            <VisualState.Setters>
                                                <Setter Target="KeyboardAcceleratorTextLabel.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>

</Application>
