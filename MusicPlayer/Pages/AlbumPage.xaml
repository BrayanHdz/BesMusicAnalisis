<Page
    x:Class="MusicPlayer.Pages.AlbumPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:MusicPlayer.Controls"
    xmlns:converters="using:MusicPlayer.Converters"
    xmlns:core="using:MusicPlayer.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:local="using:MusicPlayer.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:MusicPlayer.Viewmodels"
    x:Name="root"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:VisibilityOnEqualsConverter x:Key="EqualsConverter" OnEquals="Visible" />
        <converters:StringFormatConverter x:Key="stringFormat" />
        <converters:ListConverter x:Key="listConverter" />
        <converters:ThiknessConverter x:Key="bottomThiknessConverter" />
        <converters:VisibilityConverter x:Key="visibilityTrue" OnTrue="Visible" />
        <converters:VisibilityConverter x:Key="visibilityFalse" OnTrue="Collapsed" />
        <x:Double x:Key="MinWindowSnapPoint">0</x:Double>
        <x:Double x:Key="MediumWindowSnapPoint">641</x:Double>
        <x:Double x:Key="LargeWindowSnapPoint">1008</x:Double>
        <viewmodels:OneDriveAccessor x:Name="oneDrive" />

    </Page.Resources>
    <controls:StateListener>


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>

            <ListView
                x:Name="list"
                HorizontalContentAlignment="Stretch"
                extensions:ListViewExtensions.AlternateColor="#33AAAAAA"
                extensions:ListViewExtensions.StretchItemContainerDirection="Both"
                ItemClick="List_ItemClick"
                ItemsSource="{Binding Model.Songs}"
                SelectionMode="None">
                <ListView.Header>
                    <Border x:Name="headerBackground" Background="{StaticResource BackgroundBrush1}">



                        <Grid
                            x:Name="HeaderGrid"
                            Margin="100,100,0,24"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="HeaderColumn" Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Orientation="Horizontal">

                                <Button
                                    Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    Command="{Binding PlayAlbumCommand}"
                                    Style="{StaticResource RoundButtonStyle}">
                                    <Viewbox>
                                        <SymbolIcon Symbol="Play" />
                                    </Viewbox>
                                </Button>

                                <Button
                        x:Name="AddButton"
                        Grid.Column="1"
                                    Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource RoundButtonStyle}">
                                    <Button.Flyout>
                                        <MenuFlyout controls:AddToPlayList.IsPlaylistMenue="{Binding Model}" />
                                    </Button.Flyout>
                                    <Viewbox>
                                        <SymbolIcon Symbol="Add" />
                                    </Viewbox>

                                </Button>

                                <Button
                                    Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    Command="{Binding Source={StaticResource oneDrive}, Path=Instance.RepairAlbumCommand}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource RoundButtonStyle}">
                                    <Viewbox>
                                        <SymbolIcon Symbol="Download" />
                                    </Viewbox>
                                </Button>


                            </StackPanel>

                            <Border
                                x:Name="coverContainer"
                                Padding="3"
                                BorderThickness="1,1,3,3"
                                UseLayoutRounding="True">
                                <Border.Background>
                                    <SolidColorBrush x:Name="coverBackgroundColor" Color="White" />
                                </Border.Background>
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="coverBorderColor" Color="Black" />
                                </Border.BorderBrush>
                                <Border.Triggers>
                                    <EventTrigger>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="coverBackgroundColor"
                                                    Storyboard.TargetProperty="Color"
                                                    From="Transparent"
                                                    To="White"
                                                    Duration="0:0:5" />
                                                <ColorAnimation
                                                    Storyboard.TargetName="coverBorderColor"
                                                    Storyboard.TargetProperty="Color"
                                                    From="Transparent"
                                                    To="Black"
                                                    Duration="0:0:5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>

                                <Image
                                    x:Name="cover"
                                    Width="200"
                                    Height="200"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    ImageOpened="Cover_Loaded"
                                    Stretch="UniformToFill" />
                            </Border>
                            <StackPanel
                                x:Name="CaptionBox"
                                Grid.Column="1"
                                Margin="16,0,0,0"
                                VerticalAlignment="Bottom">
                                <TextBlock
                                    x:Name="name"
                                    MaxLines="1"
                                    Style="{StaticResource HeaderTextBlockStyle}"
                                    Text="{Binding Model.Title}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="WrapWholeWords" />
                                <TextBlock
                                    Foreground="{StaticResource AccentBrush}"
                                    MaxLines="1"
                                    Style="{StaticResource SubheaderTextBlockStyle}"
                                    Text="{Binding Model.Interpreters, Converter={StaticResource listConverter}}"
                                    TextTrimming="CharacterEllipsis" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ListView.Header>

                <ListView.Style>
                    <Style TargetType="ListView">
                        <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Padding,Bottom" />
                    </Style>
                </ListView.Style>
                <ListView.Resources>
                    <Style TargetType="ScrollBar">
                        <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Margin,Bottom" />
                    </Style>
                </ListView.Resources>
                <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>-->
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="core:SongGroup">
                        <controls:StateListener
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            DisplayMode="ShowNeverInTouchMode">
                            <Grid
                                x:Name="rowGrid"
                                Height="50"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent"
                                IsRightTapEnabled="False">
                                <Grid.Resources>

                                    <!--<x:Double x:Key="LargeWindowSnapPoint">700</x:Double>-->
                                    <Style x:Key="MenuFlyoutPresenterShowItem" TargetType="MenuFlyoutPresenter">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="IsEnabled" Value="True" />
                                    </Style>
                                    <Style x:Key="MenuFlyoutPresenterHideItem" TargetType="MenuFlyoutPresenter">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="IsEnabled" Value="False" />
                                    </Style>

                                </Grid.Resources>

                                <Grid.ContextFlyout>
                                    <MenuFlyout x:Name="GridMenuFlyout">
                                        <MenuFlyoutItem Text="Play" />
                                        <MenuFlyoutSubItem controls:AddToPlayList.IsPlaylistSubMenue="{x:Bind PreferedSong}" Text="Add" />
                                    </MenuFlyout>
                                </Grid.ContextFlyout>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition x:Name="interpretsColumn" Width="250" />
                                    <ColumnDefinition Width="60" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition x:Name="interpreterRow" Height="0" />
                                </Grid.RowDefinitions>

                                <StackPanel
                                    x:Name="ButtonPanel"
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Stretch"
                                    Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <core:Availability x:Key="NotAvailable" >NotAvailable</core:Availability>
                                        <core:Availability x:Key="UpdateAvailable" >UpdateAvailable</core:Availability>
                                    </StackPanel.Resources>
                                    <Button
                                        x:Name="UpdateButton"
                                        Visibility="{Binding Availability, Mode=OneWay, Converter={StaticResource EqualsConverter}, ConverterParameter={StaticResource NotAvailable}}"
                                                                            Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource RoundButtonStyle}"
                                    Command="{Binding Source={StaticResource oneDrive}, Path=Instance.RepairAlbumCommand}"
              >
                                        <Viewbox>
                                            <SymbolIcon Symbol="Download" />
                                        </Viewbox>
                                    </Button>

                                    <Button
                                        x:Name="RefreshButton"
                                        Visibility="{Binding Availability, Mode=OneWay, Converter={StaticResource EqualsConverter}, ConverterParameter={StaticResource UpdateAvailable}}"
                                                                            Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource RoundButtonStyle}"
                                    Command="{Binding Source={StaticResource oneDrive}, Path=Instance.RepairAlbumCommand}"
                                        
                                     >
                                        <Viewbox>
                                            <SymbolIcon Symbol="Refresh" />
                                        </Viewbox>
                                    </Button>

                                    <Button
                                        x:Name="AddButton"
 Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    Style="{StaticResource RoundButtonStyle}"
                       >
                                        <Button.Flyout>
                                            <MenuFlyout controls:AddToPlayList.IsPlaylistMenue="{x:Bind PreferedSong}" />
                                        </Button.Flyout>
                                        <Viewbox>

                                            <SymbolIcon Symbol="Add" />
                                        </Viewbox>
                                    </Button>

                                    <Button
                                        x:Name="PlayButton"
                                        
                                         Width="{StaticResource MediumButtonSize}"
                                    Height="{StaticResource MediumButtonSize}"
                                    Margin="{StaticResource MediumButtonMargin}"
                                    
                                    Style="{StaticResource RoundButtonStyle}"
                                        
                                        Command="{Binding DataContext.PlayAlbumCommand, ElementName=root}"
                                        CommandParameter="{x:Bind PreferedSong}"
                >
                                        <Viewbox>
                                            <SymbolIcon Symbol="Play" />
                                        </Viewbox>

                                    </Button>

                                    <!--<Button
                            Grid.Column="0"
                            Click="Button_Click"
                            Tag="{x:Bind}">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="" />
                            </Button>

                            <Button
                            Grid.Column="0"
                            Click="Button_Click"
                            Tag="{x:Bind}">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="" />
                            </Button>-->
                                </StackPanel>
                                <!--<TextBlock Grid.Column="0" Text="{x:Bind Title}" />-->
                                <TextBlock
                                    Grid.Column="0"
                                    Margin="3,0"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding DataContext.HasMultipleDiscs, ElementName=root, Converter={StaticResource visibilityTrue}}">
                                    <Run Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}" Text="(Disc" />
                                    <Run Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}" Text="{x:Bind DiscNumber, Mode=OneWay}" /><Run Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}" Text=")" />
                                    <Run Text="{x:Bind Track, Mode=OneWay}" /><Run Text="." />
                                    <Run Text="{x:Bind Title, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock
                                    Grid.Column="0"
                                    Margin="3,0"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding DataContext.HasMultipleDiscs, ElementName=root, Converter={StaticResource visibilityFalse}}">
                                    <Run Text="{x:Bind Track, Mode=OneWay}" /><Run Text="." />
                                    <Run Text="{x:Bind Title, Mode=OneWay}" />
                                </TextBlock>
                                <TextBlock
                                    x:Name="interprets"
                                    Grid.Column="2"
                                    VerticalAlignment="Center"
                                    Foreground="{StaticResource AccentBrush}"
                                    Text="{x:Bind Interpreters, Mode=OneWay, Converter={StaticResource listConverter}}" />
                                <TextBlock
                                    x:Name="interpretSubs"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0,0,0,4"
                                    VerticalAlignment="Center"
                                    Foreground="{StaticResource AccentBrush}"
                                    Text="{x:Bind Interpreters, Mode=OneWay, Converter={StaticResource listConverter}}"
                                    Visibility="Collapsed" />

                                <TextBlock
                                    x:Name="duration"
                                    Grid.Column="3"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Text="{x:Bind PreferedSong.Duration, Mode=OneWay, Converter={StaticResource stringFormat}, ConverterParameter='{}{0:mm\\\\:ss}'}" />

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="Width">
                                        <!--  Large window VisualState  -->
                                        <VisualState x:Name="LargeWindow">

                                            <!--  Large window trigger  -->
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                                            </VisualState.StateTriggers>

                                        </VisualState>

                                        <!--  Medium window VisualState  -->
                                        <VisualState x:Name="MediumWindow">
                                            <VisualState.Setters />
                                            <!--  Medium window trigger  -->
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                                            </VisualState.StateTriggers>

                                        </VisualState>

                                        <!--  Small window VisualState  -->
                                        <VisualState x:Name="SmallWindow">
                                            <VisualState.Setters>

                                                <Setter Target="interprets.Visibility" Value="Collapsed" />
                                                <Setter Target="interpretsColumn.Width" Value="0" />
                                                <Setter Target="interpretSubs.Visibility" Value="Visible" />
                                                <Setter Target="ButtonPanel.(Grid.RowSpan)" Value="2" />
                                                <Setter Target="duration.(Grid.RowSpan)" Value="2" />
                                                <Setter Target="interpreterRow.Height" Value="Auto" />

                                                <!--<Setter Target="interprets.Visibility" Value="Collapsed"/>
                                            <Setter Target="interpretsColumn.Width" Value="0"/>


                                            <Setter Target="albumTitle.Visibility" Value="Collapsed"/>
                                            <Setter Target="albumTitleColumn.Width" Value="0"/>

                                            <Setter Target="albumTitleSub.Visibility" Value="Visible"/>-->

                                            </VisualState.Setters>
                                            <!--  Small window trigger  -->
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                                            </VisualState.StateTriggers>

                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="Button">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <!--<DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="AddButton"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.2" />-->
                                                <DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="ButtonPanel"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.2" />
                                                <!--<DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="PlayButton"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0"
                                                    Duration="0:0:0.2" />-->
                                            </Storyboard>

                                        </VisualState>
                                        <VisualState x:Name="DoingOver">
                                            <!--<VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="700" />
                                        </VisualState.StateTriggers>-->

                                            <Storyboard>
                                                <!--<DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="AddButton"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.5" />-->
                                                <DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="ButtonPanel"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.5" />
                                                <!--<DoubleAnimation
                                                    d:IsOptimized="True"
                                                    Storyboard.TargetName="PlayButton"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1"
                                                    Duration="0:0:0.5" />-->
                                            </Storyboard>

                                            <!--<VisualState.Setters>-->
                                            <!--<Setter Target="AddButton.Opacity" Value="1"></Setter>-->
                                            <!--</VisualState.Setters>-->
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TouchGroup">
                                        <VisualState x:Name="Touch">
                                            <VisualState.Setters>
                                                <Setter Target="GridMenuFlyout.MenuFlyoutPresenterStyle" Value="{ThemeResource MenuFlyoutPresenterShowItem}" />
                                                <Setter Target="rowGrid.IsRightTapEnabled" Value="true" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="NoTouch">
                                            <VisualState.Setters>
                                                <Setter Target="GridMenuFlyout.MenuFlyoutPresenterStyle" Value="{ThemeResource MenuFlyoutPresenterHideItem}" />
                                                <Setter Target="rowGrid.IsRightTapEnabled" Value="false" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </controls:StateListener>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>



            <VisualStateManager.VisualStateGroups>

                <VisualStateGroup x:Name="WidthCategory">
                    <!--  Large window VisualState  -->
                    <VisualState x:Name="LargeWindow">

                        <!--  Large window trigger  -->
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                        </VisualState.StateTriggers>

                    </VisualState>

                    <!--  Medium window VisualState  -->
                    <VisualState x:Name="MediumWindow">
                        <VisualState.Setters>
                            <Setter Target="CaptionBox.(Grid.Row)" Value="1" />
                            <Setter Target="coverContainer.(Grid.Column)" Value="1" />
                            <Setter Target="coverContainer.(Grid.Column)" Value="1" />
                            <Setter Target="coverContainer.HorizontalAlignment" Value="Center" />
                            <Setter Target="HeaderGrid.HorizontalAlignment" Value="Center" />
                            <Setter Target="HeaderGrid.Margin" Value="24,100,24,24" />
                            <!--<Setter Target="HeaderGrid.HeaderColumn.Width" Value="0"/>-->

                        </VisualState.Setters>
                        <!--  Medium window trigger  -->
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                        </VisualState.StateTriggers>

                    </VisualState>

                    <!--  Small window VisualState  -->
                    <VisualState x:Name="SmallWindow">
                        <VisualState.Setters>
                            <Setter Target="CaptionBox.(Grid.Row)" Value="1" />
                            <Setter Target="coverContainer.(Grid.Column)" Value="1" />
                            <Setter Target="coverContainer.(Grid.Column)" Value="1" />
                            <Setter Target="coverContainer.HorizontalAlignment" Value="Center" />
                            <Setter Target="HeaderGrid.HorizontalAlignment" Value="Center" />
                            <Setter Target="HeaderGrid.Margin" Value="0,100,0,24" />

                            <!--<Setter Target="CaptionBox.(Grid.Row)" Value="1"/>
                            <Setter Target="CaptionBox.(Grid.Column)" Value="0"/>-->

                            <!--<Setter Target="interprets.Visibility" Value="Collapsed"/>
                                            <Setter Target="interpretsColumn.Width" Value="0"/>


                                            <Setter Target="albumTitle.Visibility" Value="Collapsed"/>
                                            <Setter Target="albumTitleColumn.Width" Value="0"/>

                                            <Setter Target="albumTitleSub.Visibility" Value="Visible"/>-->

                        </VisualState.Setters>
                        <!--  Small window trigger  -->
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                        </VisualState.StateTriggers>

                    </VisualState>
                </VisualStateGroup>

                <VisualStateGroup x:Name="TouchGroup">
                    <VisualState x:Name="Touch">
                        <VisualState.Setters>
                            <Setter Target="list.IsItemClickEnabled" Value="true" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="NoTouch">
                        <VisualState.Setters>
                            <Setter Target="list.IsItemClickEnabled" Value="false" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>
        </Grid>
    </controls:StateListener>
</Page>
