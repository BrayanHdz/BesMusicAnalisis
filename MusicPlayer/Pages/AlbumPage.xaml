<Page
    x:Class="MusicPlayer.Pages.AlbumPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:MusicPlayer.Converters"
    xmlns:controls="using:MusicPlayer.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:MusicPlayer.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:MusicPlayer.Viewmodels"
    xmlns:core="using:MusicPlayer.Core"
     xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    x:Name="root"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:StringFormatConverter x:Key="stringFormat" />
        <converters:ListConverter x:Key="listConverter" />
        <converters:ThiknessConverter x:Key="bottomThiknessConverter" />
        <converters:VisibilityConverter x:Key="visibilityTrue" OnTrue="Visible"/>
        <converters:VisibilityConverter x:Key="visibilityFalse" OnTrue="Collapsed"/>
        <x:Double x:Key="MinWindowSnapPoint">0</x:Double>
        <x:Double x:Key="MediumWindowSnapPoint">641</x:Double>
        <x:Double x:Key="LargeWindowSnapPoint">1008</x:Double>
    </Page.Resources>
    <controls:StateListener >


        <Grid>



            <VisualStateManager.VisualStateGroups>

                <VisualStateGroup x:Name="Width">
                    <!-- Large window VisualState -->
                    <VisualState x:Name="LargeWindow">

                        <!-- Large window trigger -->
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}"/>
                        </VisualState.StateTriggers>

                    </VisualState>

                    <!-- Medium window VisualState -->
                    <VisualState x:Name="MediumWindow">
                        <VisualState.Setters>
                            <Setter Target="CaptionBox.(Grid.Row)" Value="1"/>
                            <Setter Target="cover.(Grid.Column)" Value="1"/>
                            <Setter Target="cover.(Grid.Column)" Value="1"/>
                            <Setter Target="cover.HorizontalAlignment" Value="Center"/>
                            <Setter Target="HeaderGrid.HorizontalAlignment" Value="Center"/>
                            <Setter Target="HeaderGrid.Margin" Value="24,100,24,24"/>
                            <!--<Setter Target="HeaderGrid.HeaderColumn.Width" Value="0"/>-->

                        </VisualState.Setters>
                        <!-- Medium window trigger -->
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}">
                                
                            </AdaptiveTrigger>
                        </VisualState.StateTriggers>

                    </VisualState>

                    <!-- Small window VisualState -->
                    <VisualState x:Name="SmallWindow">
                        <VisualState.Setters>
                            <Setter Target="CaptionBox.(Grid.Row)" Value="1"/>
                            <Setter Target="cover.(Grid.Column)" Value="1"/>
                            <Setter Target="cover.(Grid.Column)" Value="1"/>
                            <Setter Target="cover.HorizontalAlignment" Value="Center"/>
                            <Setter Target="HeaderGrid.HorizontalAlignment" Value="Center"/>
                            <Setter Target="HeaderGrid.Margin" Value="0,100,0,24"/>

                            <!--<Setter Target="CaptionBox.(Grid.Row)" Value="1"/>
                            <Setter Target="CaptionBox.(Grid.Column)" Value="0"/>-->

                            <!--<Setter Target="interprets.Visibility" Value="Collapsed"/>
                                            <Setter Target="interpretsColumn.Width" Value="0"/>


                                            <Setter Target="albumTitle.Visibility" Value="Collapsed"/>
                                            <Setter Target="albumTitleColumn.Width" Value="0"/>

                                            <Setter Target="albumTitleSub.Visibility" Value="Visible"/>-->

                        </VisualState.Setters>
                        <!-- Small window trigger -->
                        <VisualState.StateTriggers >
                            <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}"/>
                        </VisualState.StateTriggers>

                    </VisualState>
                </VisualStateGroup>

                <VisualStateGroup x:Name="TouchGroup">
                    <VisualState x:Name="Touch">
                        <VisualState.Setters>
                            <Setter Target="list.IsItemClickEnabled" Value="true"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="NoTouch">
                        <VisualState.Setters>
                            <Setter Target="list.IsItemClickEnabled" Value="false"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>

            <ListView x:Name="list" 
            HorizontalContentAlignment="Stretch"
            extensions:ListViewExtensions.AlternateColor="#33AAAAAA"
             extensions:ListViewExtensions.StretchItemContainerDirection="Both"
                      ItemClick="List_ItemClick"
                      
SelectionMode="None"
            ItemsSource="{Binding Model.Songs}">
                <ListView.Header>
                    <Border x:Name="headerBackground"  Background="{StaticResource SystemControlBackgroundBaseLowBrush}">



                        <Grid 
                Margin="100,100,0,24"
                            x:Name="HeaderGrid"
                HorizontalAlignment="Left"
                VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="HeaderColumn" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*" ></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image
                    x:Name="cover"
                    Width="200"
                                
                                ImageOpened="Cover_Loaded"
                    Height="200"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" />
                            <StackPanel x:Name="CaptionBox" Grid.Column="1" Margin="16,0,0,0" VerticalAlignment="Bottom">
                                <TextBlock
                                
                        x:Name="name"
                        MaxLines="1"
                        Style="{StaticResource HeaderTextBlockStyle}"
                        Text="{Binding Model.Title}"
                        TextTrimming="CharacterEllipsis" TextWrapping="WrapWholeWords" />
                                <TextBlock
                        MaxLines="1"
                        Style="{StaticResource SubheaderTextBlockStyle}"
                                    TextTrimming="CharacterEllipsis"
                        Text="{Binding Model.Interpreters, Converter={StaticResource listConverter}}" />
                            </StackPanel>
                        </Grid>
                    </Border>
                </ListView.Header>

                <ListView.Style>
                    <Style TargetType="ListView">
                        <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Padding,Bottom" />
                    </Style>
                </ListView.Style>
                <ListView.Resources>
                    <Style TargetType="ScrollBar">
                        <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Margin,Bottom" />
                    </Style>
                </ListView.Resources>
                <!--<ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>-->
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="core:SongGroup">
                        <controls:StateListener VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch"  HorizontalContentAlignment="Stretch" DisplayMode="ShowNeverInTouchMode">
                            <Grid IsRightTapEnabled="False" x:Name="rowGrid" Height="50" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Background="Transparent" >

                                <Grid.Resources>
                                
                                    <!--<x:Double x:Key="LargeWindowSnapPoint">700</x:Double>-->
                                    <Style TargetType="MenuFlyoutPresenter" x:Key="MenuFlyoutPresenterShowItem">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </Style>
                                    <Style TargetType="MenuFlyoutPresenter" x:Key="MenuFlyoutPresenterHideItem">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>

                                </Grid.Resources>
                                
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="Width">
                                        <!-- Large window VisualState -->
                                        <VisualState x:Name="LargeWindow">

                                            <!-- Large window trigger -->
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}"/>
                                            </VisualState.StateTriggers>

                                        </VisualState>

                                        <!-- Medium window VisualState -->
                                        <VisualState x:Name="MediumWindow">
                                            <VisualState.Setters>

                                            </VisualState.Setters>
                                            <!-- Medium window trigger -->
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}"/>
                                            </VisualState.StateTriggers>

                                        </VisualState>

                                        <!-- Small window VisualState -->
                                        <VisualState x:Name="SmallWindow">
                                            <VisualState.Setters>

                                                <Setter Target="interprets.Visibility" Value="Collapsed"/>
                                                <Setter Target="interpretsColumn.Width" Value="0"/>
                                                <Setter Target="interpretSubs.Visibility" Value="Visible"/>
                                                <Setter Target="ButtonPanel.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="duration.(Grid.RowSpan)" Value="2"/>
                                                <Setter Target="interpreterRow.Height" Value="Auto"/>

                                                <!--<Setter Target="interprets.Visibility" Value="Collapsed"/>
                                            <Setter Target="interpretsColumn.Width" Value="0"/>


                                            <Setter Target="albumTitle.Visibility" Value="Collapsed"/>
                                            <Setter Target="albumTitleColumn.Width" Value="0"/>

                                            <Setter Target="albumTitleSub.Visibility" Value="Visible"/>-->

                                            </VisualState.Setters>
                                            <!-- Small window trigger -->
                                            <VisualState.StateTriggers >
                                                <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}"/>
                                            </VisualState.StateTriggers>

                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="Button">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" To="0"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="AddButton" d:IsOptimized="True"/>
                                                <DoubleAnimation Duration="0:0:0.2" To="0"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="PlayButton" d:IsOptimized="True"/>
                                            </Storyboard>

                                        </VisualState>
                                        <VisualState x:Name="DoingOver">
                                            <!--<VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="700" />
                                        </VisualState.StateTriggers>-->

                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.5" To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="AddButton" d:IsOptimized="True"/>
                                                <DoubleAnimation Duration="0:0:0.5" To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="PlayButton" d:IsOptimized="True"/>
                                            </Storyboard>

                                            <!--<VisualState.Setters>-->
                                            <!--<Setter Target="AddButton.Opacity" Value="1"></Setter>-->
                                            <!--</VisualState.Setters>-->
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TouchGroup">
                                        <VisualState x:Name="Touch">
                                            <VisualState.Setters>
                                                <Setter Target="GridMenuFlyout.MenuFlyoutPresenterStyle" Value="{ThemeResource MenuFlyoutPresenterShowItem}"/>
                                                <Setter Target="rowGrid.IsRightTapEnabled" Value="true"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="NoTouch">
                                            <VisualState.Setters>
                                                <Setter Target="GridMenuFlyout.MenuFlyoutPresenterStyle" Value="{ThemeResource MenuFlyoutPresenterHideItem}"/>
                                                <Setter Target="rowGrid.IsRightTapEnabled" Value="false"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid.ContextFlyout>
                                    <MenuFlyout x:Name="GridMenuFlyout">
                                        <MenuFlyoutItem Text="Play"></MenuFlyoutItem>
                                        <MenuFlyoutSubItem Text="Add" controls:AddToPlayList.IsPlaylistSubMenue="{x:Bind PreferedSong}" />
                                    </MenuFlyout>
                                </Grid.ContextFlyout>
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition x:Name="interpretsColumn" Width="4*" />
                                    <ColumnDefinition Width="60"   />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition x:Name="interpreterRow" Height="0"/>
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Column="1" x:Name="ButtonPanel" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Right">
                                    <Button x:Name="AddButton"    
                                        Margin="8,0,0,0"   
                                        Opacity="0"
                                            Width="50"
                    Background="Transparent" 
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Right"
                     
                    
                    >
                                        <Button.Flyout>
                                            <MenuFlyout  controls:AddToPlayList.IsPlaylistMenue="{x:Bind PreferedSong}"/>
                                        </Button.Flyout>
                                        <SymbolIcon Symbol="Add" />

                                    </Button>
                                    <Button x:Name="PlayButton" 
                    Margin="0,0,8,0" 
Background="Transparent" Opacity="0"
VerticalAlignment="Stretch"
                                            Width="50"
                                    HorizontalAlignment="Right"
    
                    
                   Command="{Binding DataContext.PlayAlbumCommand, ElementName=root}"
                                    CommandParameter="{x:Bind PreferedSong}"
                    >
                                        <SymbolIcon Symbol="Play" />

                                    </Button>

                                    <!--<Button
                            Grid.Column="0"
                            Click="Button_Click"
                            Tag="{x:Bind}">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="" />
                            </Button>

                            <Button
                            Grid.Column="0"
                            Click="Button_Click"
                            Tag="{x:Bind}">
                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="" />
                            </Button>-->
                                </StackPanel>
                                <!--<TextBlock Grid.Column="0" Text="{x:Bind Title}" />-->
                                <TextBlock VerticalAlignment="Center" Grid.Column="0" Margin="3,0"  Visibility="{Binding DataContext.HasMultipleDiscs, ElementName=root,Converter={StaticResource visibilityTrue}}">
                            <Run Text="(Disc"  Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}" />
                            <Run Text="{x:Bind DiscNumber}" Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}" /><Run Text=")"  Foreground="{StaticResource SystemControlForegroundChromeDisabledLowBrush}"/>
                            <Run Text="{x:Bind Track}" /><Run Text="." />
                            <Run Text="{x:Bind Title}" />
                                </TextBlock>
                                <TextBlock VerticalAlignment="Center" Grid.Column="0" Margin="3,0" Visibility="{Binding DataContext.HasMultipleDiscs, ElementName=root,Converter={StaticResource visibilityFalse}}">
                            <Run Text="{x:Bind Track}" /><Run Text="." />
                            <Run Text="{x:Bind Title}" />
                                </TextBlock>
                                <TextBlock x:Name="interprets" VerticalAlignment="Center" Grid.Column="2" Text="{x:Bind Interpreters, Converter={StaticResource listConverter}}" />
                                <TextBlock x:Name="interpretSubs" Margin="0,0,0,4" Foreground="{StaticResource SystemColorGrayTextBrush}"  VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Visibility="Collapsed" Text="{x:Bind Interpreters, Converter={StaticResource listConverter}}" />

                                <TextBlock x:Name="duration" VerticalAlignment="Center" Grid.Column="3" Text="{x:Bind PreferedSong.Duration, Converter={StaticResource stringFormat}, ConverterParameter='{}{0:mm\\\\:ss}'}"  HorizontalAlignment="Right" />
                            </Grid>
                        </controls:StateListener>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </controls:StateListener>
</Page>
