<Page
    x:Class="MusicPlayer.Pages.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:MusicPlayer.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:MusicPlayer.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:services="using:MusicPlayer.Services"
    xmlns:viewmodels="using:MusicPlayer.Viewmodels"
    xmlns:converters="using:MusicPlayer.Converters"
    x:Name="root"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">



    <Page.Resources>
        <converters:StringFormatConverter x:Key="stringFormat" />
        <converters:ListConverter x:Key="listConverter"></converters:ListConverter>
        <DataTemplate x:Key="PivotLeftHeaderTemplate1">
            <Grid>
                <Button Style="{StaticResource NavigationBackButtonNormalStyle}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.IsVisible}">
                    <Button.Command>
                        <services:NavigateBackCommand />
                    </Button.Command>
                </Button>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>

        <Pivot >
            <PivotItem Header="Now Playing" >
                <PivotItem.DataContext>
                    <viewmodels:MediaPlayerAccessor/>
                </PivotItem.DataContext>
                <ListView IsItemClickEnabled="False" 
                          ItemsSource="{Binding Instance.CurrentPlaylist}" SelectedIndex="{Binding Instance.CurrentPlayingIndex, Mode=TwoWay}" SelectionMode="Single" HorizontalContentAlignment="Stretch">
                    <ListView.Style>
                        <Style TargetType="ListView">
                            <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Padding,Bottom" />
                        </Style>
                    </ListView.Style>
                    <ListView.Header>
                        <Grid Margin="0,16,0,30">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MaxWidth="100"/>
                                <ColumnDefinition Width="*" MinWidth="160" MaxWidth="300" />
                                <ColumnDefinition Width="*" MaxWidth="100" x:Name="LastColumn"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox HorizontalAlignment="Left"  Grid.Column="1"  MaxWidth="300">

                                <Button Style="{StaticResource InvisibleButton}"  Click="Button_Click" Background="{x:Null}" Padding="0"  >
                                    <controls:NowPlayingDisk BorderBrush="{ThemeResource ForgroundBrush1}" Width="300" Height="300"/>
                                </Button>
                            </Viewbox>
                            <StackPanel x:Name="SongDataContainer" VerticalAlignment="Center" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1" >
                               
                            <TextBlock Foreground="{StaticResource ForgroundBrush3}" Margin="0,12,0,0" Text="{Binding Instance.Song.AlbumTitle}"  Style="{StaticResource CaptionTextBlockStyle}"/>
                            <TextBlock Grid.ColumnSpan="2" Margin="0,-4,0,0" Grid.Column="1"   Grid.Row="2" Text="{Binding Instance.Song.Title}" Style="{StaticResource TitleTextBlockStyle}"/>
                            <TextBlock  Foreground="{StaticResource AccentBrush}" Grid.ColumnSpan="2" Margin="0,-4,0,0" Grid.Column="1" Grid.Row="3" Text="{Binding Instance.Song.Artist}" Style="{StaticResource SubtitleTextBlockStyle}"/>
                            </StackPanel>
                            <!--<SymbolIcon  Symbol="Up" Grid.ColumnSpan="3" HorizontalAlignment="Left" Grid.Row="3" ></SymbolIcon>-->

                        </Grid>
                    </ListView.Header>
                    <ListView.Resources>
                        <Style TargetType="ScrollBar">
                            <Setter Property="converters:ThiknessConverter.ConstBindThickness" Value="Margin,Bottom" />
                        </Style>
                    </ListView.Resources>
                    <!--<ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>-->
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <UserControl>

                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.Resources>
                                        <x:Double x:Key="MinWindowSnapPoint">0</x:Double>
                                        <x:Double x:Key="MediumWindowSnapPoint">641</x:Double>
                                        <x:Double x:Key="LargeWindowSnapPoint">1008</x:Double>
                                    </Grid.Resources>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>


                                            <!-- Large window VisualState -->
                                            <VisualState x:Name="LargeWindow">

                                                <!-- Large window trigger -->
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}"/>
                                                </VisualState.StateTriggers>

                                            </VisualState>

                                            <!-- Medium window VisualState -->
                                            <VisualState x:Name="MediumWindow">
                                                <VisualState.Setters>
                                                    <Setter Target="interprets.Visibility" Value="Collapsed"/>
                                                    <Setter Target="interpretsColumn.Width" Value="0"/>
                                                    <Setter Target="interpretSubs.Visibility" Value="Visible"/>
                                                </VisualState.Setters>
                                                <!-- Medium window trigger -->
                                                <VisualState.StateTriggers>
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}"/>
                                                </VisualState.StateTriggers>

                                            </VisualState>

                                            <!-- Small window VisualState -->
                                            <VisualState x:Name="SmallWindow">
                                                <VisualState.Setters>
                                                    <Setter Target="interprets.Visibility" Value="Collapsed"/>
                                                    <Setter Target="interpretsColumn.Width" Value="0"/>


                                                    <Setter Target="albumTitle.Visibility" Value="Collapsed"/>
                                                    <Setter Target="albumTitleColumn.Width" Value="0"/>

                                                    <Setter Target="albumTitleSub.Visibility" Value="Visible"/>

                                                </VisualState.Setters>
                                                <!-- Small window trigger -->
                                                <VisualState.StateTriggers >
                                                    <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}"/>
                                                </VisualState.StateTriggers>

                                            </VisualState>

                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  x:Name="songTitleColumn" Width="6*"/>
                                        <ColumnDefinition x:Name="albumTitleColumn"  Width="4*"/>
                                        <ColumnDefinition x:Name="interpretsColumn"  Width="4*"/>
                                        <ColumnDefinition   x:Name="durationColumn"  Width="60" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" x:Name="songTitle" Margin="8,0" Text="{Binding Song.Title}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Song.Title}" />
                                    <TextBlock Grid.Column="1" x:Name="albumTitle" Margin="8,0" Text="{Binding Song.AlbumName}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Song.AlbumName}" />
                                    <TextBlock Grid.Column="2"  x:Name="interprets" Margin="8,0" Text="{Binding Song.Interpreters,Converter={StaticResource listConverter}}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Song.Interpreters,Converter={StaticResource listConverter}}" Foreground="{StaticResource AccentBrush}" />
                                    <TextBlock Grid.Column="3" HorizontalAlignment="Right" Margin="8,0" Text="{Binding Song.Duration, Converter={StaticResource stringFormat}, ConverterParameter='{}{0:mm\\:ss}'}"/>


                                    <TextBlock 
                                        x:Name="interpretSubs"
                                        Visibility="Collapsed"
                                        Foreground="{StaticResource AccentBrush}" 
                                        TextWrapping="NoWrap"
                                        TextTrimming="CharacterEllipsis"
                                        Style="{StaticResource  BodyTextBlockStyle}"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1" Margin="8,0" HorizontalAlignment="Left">
                                        <Run Text="{Binding Song.Interpreters,Converter={StaticResource listConverter}}" />
                                    </TextBlock>


                                    <TextBlock x:Name="albumTitleSub" Visibility="Collapsed" Foreground="{StaticResource SystemColorGrayTextBrush}"  TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Style="{StaticResource  BodyTextBlockStyle}"  Grid.ColumnSpan="4" Grid.Row="1" Margin="8,0" HorizontalAlignment="Stretch">
                                        <Run Text="{Binding Song.AlbumName}" />
                                        <Run Text="&#x2022;" />
                                        <Run Text="{Binding Song.Interpreters,Converter={StaticResource listConverter}}" Foreground="{StaticResource AccentBrush}" />
                                    </TextBlock>

                                    <Grid.ContextFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Remove" Click="MenuFlyoutItem_Click"/>
                                        </MenuFlyout>
                                    </Grid.ContextFlyout>
                                </Grid>
                            </UserControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </PivotItem>
            <PivotItem Header="Playlists" >
                <controls:PlayListControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </PivotItem>
            <PivotItem Header="Albums">
                <controls:Albums HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

            </PivotItem>
        </Pivot>
        <!--<Hub Orientation="Horizontal" >
            <HubSection Header="Now Playing">
                <DataTemplate>
                    <Grid Width="{Binding HubSize, ElementName=root}"></Grid>

                </DataTemplate>

            </HubSection>
            <HubSection Header="Playlists" >
                <DataTemplate>
                    <Grid Width="{Binding HubSize, ElementName=root}"></Grid>

                </DataTemplate>
            </HubSection>
            <HubSection Header="Albums">
                <DataTemplate>
                    <Grid Width="{Binding HubSize, ElementName=root}"></Grid>

                </DataTemplate>

            </HubSection>
        </Hub>-->

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>


                <!-- Large window VisualState -->
                <VisualState x:Name="LargeWindow">

                    
                    <!-- Large window trigger -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="SongDataContainer.(Grid.Column)" Value="2"></Setter>
                        <Setter Target="SongDataContainer.(Grid.Row)" Value="0"></Setter>
                        <Setter Target="SongDataContainer.VerticalAlignment" Value="Center"></Setter>
                        <Setter Target="SongDataContainer.Margin" Value="24"></Setter>
                        <Setter Target="LastColumn.MaxWidth" Value="999999"></Setter>
                    </VisualState.Setters>
                    
                    
                </VisualState>

                <!-- Medium window VisualState -->
                <VisualState x:Name="MediumWindow">
                    <VisualState.Setters>
                        <!--<Setter Target="interprets.Visibility" Value="Collapsed"/>
                        <Setter Target="interpretsColumn.Width" Value="0"/>
                        <Setter Target="interpretSubs.Visibility" Value="Visible"/>-->
                    </VisualState.Setters>
                    <!-- Medium window trigger -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>

                </VisualState>


            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</Page>
